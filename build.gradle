buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.19.3-5.2.2'
group = 'com.blakebr0.extendedcrafting'
archivesBaseName = 'ExtendedCrafting'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

repositories {
    maven { url 'https://maven.blakesmods.com' }
    maven { url 'https://maven.blamejared.com' }
    maven {
        url 'https://cursemaven.com'
        content {
            includeGroup 'curse.maven'
        }
    }
}

minecraft {
    mappings channel: 'official', version: '1.19.3'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            ideaModule rootProject.name != project.name ? "${rootProject.name}.${project.name}.main" : "${project.name}.main"

            mods {
                extendedcrafting {
                    source sourceSets.main
                }

                if (findProject(':Cucumber') != null) {
                    cucumber {
                        source project(':Cucumber').sourceSets.main
                    }
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            ideaModule rootProject.name != project.name ? "${rootProject.name}.${project.name}.main" : "${project.name}.main"

            mods {
                extendedcrafting {
                    source sourceSets.main
                }

                if (findProject(':Cucumber') != null) {
                    cucumber {
                        source project(':Cucumber').sourceSets.main
                    }
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${forge_version}"

    if (findProject(':Cucumber')) {
        implementation project(':Cucumber')
    } else {
        implementation fg.deobf("com.blakebr0.cucumber:Cucumber:${cucumber_version}")
    }

    implementation fg.deobf("curse.maven:jade-324717:${jade_version}")
    compileOnly fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-${crafttweaker_version}")

    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${jei_mc_version}-forge:${jei_version}")

    compileOnly "mezz.jei:jei-${jei_mc_version}-common-api:${jei_version}"
    compileOnly "mezz.jei:jei-${jei_mc_version}-forge-api:${jei_version}"
}

jar {
    manifest {
        attributes([
            'Specification-Title': 'Extended Crafting',
            'Specification-Vendor': 'BlakeBr0',
            'Specification-Version': '1',
            'Implementation-Title': project.name,
            'Implementation-Version': "${version.split('-').last()}",
            'Implementation-Vendor' : 'BlakeBr0',
            'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        maven(MavenPublication) {
            artifact jar
        }
    }

    repositories {
        maven {
            url = 'https://maven.blakesmods.com'

            credentials {
                username = System.getenv('BLAKESMODS_MAVEN_USERNAME')
                password = System.getenv('BLAKESMODS_MAVEN_PASSWORD')
            }

            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}

task addTestDatapacks(type: Copy) {
    file('run/saves').eachDir {dir ->
        project.copy {
            from 'src/test/resources/datapacks'
            into file(dir.path + '/datapacks')
        }
    }

    project.copy {
        from 'src/test/resources/datapacks'
        into file('run/world/datapacks')
    }
}

task addTestScripts(type: Copy) {
    from 'src/test/resources/scripts'

    into file('run/scripts')
}

tasks.processResources.finalizedBy('addTestDatapacks', 'addTestScripts')